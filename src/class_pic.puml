@startuml
skinparam linetype ortho
class FjeExplorer {
    + static load_json(file_path)
    + static load_icons(file_path)
    + static parse_arguments()
}

class Node {
    + name : str
    + abstract is_leaf() : bool
}

class CompositeNode {
    + children : List[Node]
    + add(node : Node)
    + is_leaf() : bool
}

class LeafNode {
    + value : Any
    + is_leaf() : bool
}

abstract NodeBuilder {
    + abstract build(data : Any, name="root") : Node
}

class CompositeNodeBuilder {
    + build(data : Any, name="root") : Node
}

class TreeDirector {
    - _builder : NodeBuilder
    + build_tree(data : Any, name='root') : Node
}

class Visualizer {
    + icons : Dict[str, str]
    + abstract visualize(node : Node, level=0)
}

class TreeVisualizer {
    + visualize(node : Node)
    + draw(node : Node, level=0, is_last_child=False) : str
    + beautify(result : str) : str
}

class RectangleVisualizer {
    + visualize(node : Node)
    + draw(node : Node, level=0, is_last_child=False) : str
    + beautify(result : str) : str
}

class NewVisualizer {
    + visualize(node : Node, level=0) : str
}

abstract VisualizerFactory {
    + abstract get_visualizer(style : str, icons : Dict[str, str]) : Visualizer
}

class ConcreteVisualizerFactory {
    + get_visualizer(style : str, icons : Dict[str, str]) : Visualizer
}



Node <|-- CompositeNode
Node <|-- LeafNode
NodeBuilder <|-- CompositeNodeBuilder
Visualizer <|-- TreeVisualizer
Visualizer <|-- RectangleVisualizer
Visualizer <|-- NewVisualizer
VisualizerFactory <|-- ConcreteVisualizerFactory

CompositeNode "1" *-- "0..n" Node
TreeDirector "1" *-- "1" NodeBuilder
VisualizerFactory <|.. ConcreteVisualizerFactory
ConcreteVisualizerFactory "1" *-- "1..n" Visualizer
ConcreteVisualizerFactory ..> Visualizer : create
FjeExplorer .down.> CompositeNodeBuilder : 使用
FjeExplorer .down.> TreeDirector : 使用
FjeExplorer .down.> ConcreteVisualizerFactory : 使用


note top of CompositeNode
  组合模式
end note
note top of CompositeNodeBuilder
  建造者模式
end note
note top of ConcreteVisualizerFactory
  抽象工厂模式
end note
note right of ConcreteVisualizerFactory
  工厂方法模式
end note

@enduml
